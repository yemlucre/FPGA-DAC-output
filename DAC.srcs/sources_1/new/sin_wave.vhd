library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
use IEEE.NUMERIC_STD.ALL;


entity sine_wave is
    Port (
        clk      : in  STD_LOGIC;        -- 输入时钟信号
        dac_out  : out STD_LOGIC_VECTOR (13 downto 0)  -- 14位输出给DAC
    );
end sine_wave;

architecture Behavioral of sine_wave is

    -- 正弦波查找表 (LUT): 256个点，14位宽度
    type sine_lut_type is array (0 to 255) of STD_LOGIC_VECTOR (13 downto 0);
    constant sine_lut : sine_lut_type := (
    "10000000000000", "10000011001001", "10000110010010", "10001001011011",
    "10001100100011", "10001111101011", "10010010110010", "10010101111000",
    "10011000111110", "10011100000011", "10011111000110", "10100010001001",
    "10100101001010", "10101000001001", "10101011000111", "10101110000100",
    "10110000111111", "10110011110111", "10110110101110", "10111001100011",
    "10111100010101", "10111111000101", "11000001110011", "11000100011110",
    "11000111000111", "11001001101100", "11001100001111", "11001110101111",
    "11010001001100", "11010011100110", "11010101111101", "11011000010000",
    "11011010100000", "11011100101100", "11011110110101", "11100000111010",
    "11100010111100", "11100100111001", "11100110110011", "11101000101001",
    "11101010011011", "11101100001000", "11101101110010", "11101111010111",
    "11110000111000", "11110010010100", "11110011101101", "11110101000000",
    "11110110001111", "11110111011010", "11111000100000", "11111001100010",
    "11111010011110", "11111011010110", "11111100001010", "11111100111000",
    "11111101100010", "11111110000110", "11111110100110", "11111111000001",
    "11111111011000", "11111111101001", "11111111110101", "11111111111101",
    "11111111111111", "11111111111101", "11111111110101", "11111111101001",
    "11111111011000", "11111111000001", "11111110100110", "11111110000110",
    "11111101100010", "11111100111000", "11111100001010", "11111011010110",
    "11111010011110", "11111001100010", "11111000100000", "11110111011010",
    "11110110001111", "11110101000000", "11110011101101", "11110010010100",
    "11110000111000", "11101111010111", "11101101110010", "11101100001000",
    "11101010011011", "11101000101001", "11100110110011", "11100100111001",
    "11100010111100", "11100000111010", "11011110110101", "11011100101100",
    "11011010100000", "11011000010000", "11010101111101", "11010011100110",
    "11010001001100", "11001110101111", "11001100001111", "11001001101100",
    "11000111000111", "11000100011110", "11000001110011", "10111111000101",
    "10111100010101", "10111001100011", "10110110101110", "10110011110111",
    "10110000111111", "10101110000100", "10101011000111", "10101000001001",
    "10100101001010", "10100010001001", "10011111000110", "10011100000011",
    "10011000111110", "10010101111000", "10010010110010", "10001111101011",
    "10001100100011", "10001001011011", "10000110010010", "10000011001001",
    "10000000000000", "01111100110111", "01111001101110", "01110110100101",
    "01110011011101", "01110000010101", "01101101001110", "01101010001000",
    "01100111000010", "01100011111101", "01100000111010", "01011101110111",
    "01011010110110", "01010111110111", "01010100111001", "01010001111100",
    "01001111000001", "01001100001001", "01001001010010", "01000110011101",
    "01000011101011", "01000000111011", "00111110001101", "00111011100010",
    "00111000111001", "00110110010100", "00110011110001", "00110001010001",
    "00101110110100", "00101100011010", "00101010000011", "00100111110000",
    "00100101100000", "00100011010100", "00100001001011", "00011111000110",
    "00011101000100", "00011011000111", "00011001001101", "00010111010111",
    "00010101100101", "00010011111000", "00010010001110", "00010000101001",
    "00001111001000", "00001101101100", "00001100010011", "00001011000000",
    "00001001110001", "00001000100110", "00000111100000", "00000110011110",
    "00000101100010", "00000100101010", "00000011110110", "00000011001000",
    "00000010011110", "00000001111010", "00000001011010", "00000000111111",
    "00000000101000", "00000000010111", "00000000001011", "00000000000011",
    "00000000000001", "00000000000011", "00000000001011", "00000000010111",
    "00000000101000", "00000000111111", "00000001011010", "00000001111010",
    "00000010011110", "00000011001000", "00000011110110", "00000100101010",
    "00000101100010", "00000110011110", "00000111100000", "00001000100110",
    "00001001110001", "00001011000000", "00001100010011", "00001101101100",
    "00001111001000", "00010000101001", "00010010001110", "00010011111000",
    "00010101100101", "00010111010111", "00011001001101", "00011011000111",
    "00011101000100", "00011111000110", "00100001001011", "00100011010100",
    "00100101100000", "00100111110000", "00101010000011", "00101100011010",
    "00101110110100", "00110001010001", "00110011110001", "00110110010100",
    "00111000111001", "00111011100010", "00111110001101", "01000000111011",
    "01000011101011", "01000110011101", "01001001010010", "01001100001001",
    "01001111000001", "01010001111100", "01010100111001", "01010111110111",
    "01011010110110", "01011101110111", "01100000111010", "01100011111101",
    "01100111000010", "01101010001000", "01101101001110", "01110000010101",
    "01110011011101", "01110110100101", "01111001101110", "01111100110111"
    );

    -- 地址计数器信号 (8位地址，0-255)
    signal addr : STD_LOGIC_VECTOR (7 downto 0) := (others => '0');

begin

    -- 地址计数器：时钟上升沿计数
    process (clk)
    begin
        if rising_edge(clk) then
            addr <= addr + 1;         -- 地址逐步递增
        end if;
    end process;
    -- 输出数据：根据地址读取查找表中的14位正弦波数据
dac_out <= sine_lut(to_integer(unsigned(addr)));

end Behavioral;
